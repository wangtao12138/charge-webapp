package cn.com.cdboost.charge.webapi.controller;

import cn.com.cdboost.charge.base.aop.SystemControllerLog;
import cn.com.cdboost.charge.base.util.DateUtil;
import cn.com.cdboost.charge.base.vo.ApiResult;
import cn.com.cdboost.charge.base.vo.PageData;
import cn.com.cdboost.charge.merchant.dubbo.WebChargingDeviceService;
import cn.com.cdboost.charge.merchant.vo.info.ChargingDeviceVo;
import cn.com.cdboost.charge.merchant.vo.param.ChargerDeviceQueryParam;
import cn.com.cdboost.charge.merchant.vo.param.DeviceParam;
import cn.com.cdboost.charge.webapi.dto.param.ChargerDeviceAddParam;
import cn.com.cdboost.charge.webapi.service.GenerateFileService;
import cn.com.cdboost.charge.webapi.util.DownLoadUtil;
import com.alibaba.dubbo.config.annotation.Reference;
import com.alibaba.fastjson.JSON;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import lombok.extern.slf4j.Slf4j;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;
import java.text.ParseException;
import java.util.List;

/**
 * 充电控制类
 */
@Api(value ="充电设备管理",tags = "充电设备管理相关接口")
@RestController
@Slf4j
@RequestMapping(value = "/api/webapi/v1/charger")
public class ChargerController {

    @Reference
    WebChargingDeviceService chargingDeviceService;
    @Autowired
    GenerateFileService generateFileService;
    /**
     * 充电设备列表查询
     * @param queryVo
     * @return
     */
    @SystemControllerLog(description = "充电设备列表查询")
    @RequestMapping(value = "/deviceList")
    @ApiOperation(value="充电设备列表查询")
    @ApiParam(name = "queryVo",value = "充电设备列表查询入参",required = true)
    public String deviceList(@RequestBody ChargerDeviceQueryParam queryVo){
        ApiResult<PageData<ChargingDeviceVo>> result=new ApiResult();
        // LoginUser currentUser = (LoginUser)session.getAttribute(GlobalConstant.CURRENT_LOGIN_USER);
        Integer userId=1;
        //查询数据库
        List<ChargingDeviceVo> chargingDevices = chargingDeviceService.deviceList(queryVo,userId);
        PageData pageData=new PageData();
        pageData.setList(chargingDevices);
        pageData.setTotal(queryVo.getTotal());
        result.setData(pageData);
        return JSON.toJSONString(result);
    }
    /**
     * 充电设备列表下载
     * @param queryVo
     * @return
     */
    @SystemControllerLog(description = "充电设备列表下载")
    @RequestMapping(value = "/deviceListDown")
    @ApiOperation(value="充电设备列表下载")
    @ApiParam(name = "queryVo",value = "充电设备列表下载入参",required = true)
    public void deviceListDown(HttpServletResponse response, ChargerDeviceQueryParam queryVo){
      //  LoginUser currentUser = (LoginUser)session.getAttribute(GlobalConstant.CURRENT_LOGIN_USER);
        Integer userId=1;
        //查询数据库
        List<ChargingDeviceVo> chargingDevices = chargingDeviceService.deviceList(queryVo,userId);
        try {
            XSSFWorkbook workBook = generateFileService.generateChargingDeviceListExcel("充电桩列表",chargingDevices);
            DownLoadUtil.downExcel(response,workBook);
        } catch (Exception e) {
            String message = "充电桩列表";
            log.error(message,e);
        }
    }
    /**
     * 添加充电设备
     * @param param
     * @return
     */

    @SystemControllerLog(description = "添加充电设备")
    @RequestMapping(value = "/addDevice")
    @ApiOperation(value="充电设备添加")
    @ApiParam(name = "param",value = "充电设备添加入参",required = true)
    public String addDevice(HttpSession session,@Valid @RequestBody ChargerDeviceAddParam param){
        ApiResult result=new ApiResult();
        //LoginUser currentUser = (LoginUser)session.getAttribute(GlobalConstant.CURRENT_LOGIN_USER);
        Integer userId=1;
        DeviceParam chargingDevice = new DeviceParam();
        BeanUtils.copyProperties(param,chargingDevice);
        chargingDevice.setInstallDate(DateUtil.parseDate(param.getInstallDate()));
        //调用业务层
        chargingDeviceService.addDevice(chargingDevice,userId);

        //添加ic卡下发表
        chargingDeviceService.addCardList(chargingDevice);
        /*userLogService.create(userId, Action.ADD.getActionId(), "充电桩设备", "充电桩设备编号", param.getDeviceNo(),"新增["+param.getDeviceNo()+"]充电桩设备",JSON.toJSONString(param));
        result.setMessage("添加成功！");*/
        return JSON.toJSONString(result);
    }
    /**
     * 删除充电设备
     * @param deviceNos
     * @return
     */
    @SystemControllerLog(description = "删除充电设备")
    @RequestMapping(value = "/deleteDevice")
    @ApiOperation(value="删除充电设备")
    @ApiParam(name = "deviceNos",value = "删除充电设备入参",required = true)
    public String deleteDevice(HttpSession session,@RequestBody List<String> deviceNos){
        ApiResult result=new ApiResult();
       // LoginUser currentUser = (LoginUser)session.getAttribute(GlobalConstant.CURRENT_LOGIN_USER);
        Integer userId=1;
        //调用业务层删除设备
        boolean flag = chargingDeviceService.deleteDevice(deviceNos,userId);
        if (flag){
            result.setMessage("删除成功");
          /*  userLogService.create(currentUser.getId(), Action.DELETE.getActionId(), "充电桩设备", "充电桩设备编号", "","删除["+deviceNos.toString()+"]充电桩设备",JSON.toJSONString(deviceNos));*/
        } else {
            result.error("删除失败");
        }
        chargingDeviceService.deleteCardList(deviceNos);
        return JSON.toJSONString(result);
    }
    /**
     * 充电设备详情---基础信息
     * @param deviceNo
     * @return
     */
    @SystemControllerLog(description = "充电设备详情---基础信息")
    @RequestMapping(value = "/deviceDetial")
    @ApiOperation(value="充电设备详情---基础信息")
    @ApiParam(name = "deviceNo",value = "充电设备详情---基础信息入参",required = true)
    public String deviceDetial(@RequestParam String deviceNo){
        ApiResult result=new ApiResult();
        //查询数据库
        ChargingDeviceVo chargingDeviceDto = chargingDeviceService.queryDeviceDetial(deviceNo);
        result.setData(chargingDeviceDto);
        return JSON.toJSONString(result);
    }

}
